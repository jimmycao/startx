execute pathogen#infect()

set pastetoggle=<F8>
set cc=100
set mouse-=a 

"set encoding=utf-8
"set termencoding=gbk
"set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
"set fileencodings=utf-8,gbk
"set encoding=utf-8 
"set fileencodings=utf-8,gbk
"set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936  

let mapleader = ","

set noswapfile

"fast write                                                                                            
nmap <leader>w :w!<cr>

"""""""""""""no undofile and swapfile"""""""""""""""""""""""""
set noundofile
set nobackup
set noswapfile

"""""""""""""nerd tree"""""""""""""""""""""""""
"autocmd vimenter * NERDTree
map <leader>nn :NERDTreeToggle<cr>                                                                     
map <leader>nb :NERDTreeFromBookmark                                                                   
map <leader>nf :NERDTreeFind<cr> 
let NERDTreeWinPos=1

"""""""""""""tagbar"""""""""""""""""""""""""
nmap <F4> :TagbarToggle<CR>
let g:tagbar_width = 40
"autocmd VimEnter * nested :call tagbar#autoopen(1)
let g:tagbar_left = 1 





"""""""""""""clors"""""""""""""""""""""""""
"colorscheme desert         " awesome colorscheme
colorscheme badwolf         " awesome colorscheme
"colorscheme solarized      " awesome colorscheme

syntax enable               " enable syntax processing
syntax on                   " enable syntax processing


"""""""""""""space & tabs"""""""""""""""""""""""""
"set tabstop=4           " number of visual spaces per TAB
"set softtabstop=4       " number of spaces in tab when editing
"set expandtab           " tabs are spaces

filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab


"""""""""""""UI"""""""""""""""""""""""""
set number              " show line numbers
set showcmd             " show command in bottom bar
set cursorline          " highlight current line

filetype indent on      " load filetype-specific indent files

set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.

set showmatch           " highlight matching [{()}]

""""""""""""""omnicppcomplete""""""""""""""
filetype plugin indent on
set completeopt=longest,menu
let OmniCpp_NamespaceSearch = 2
let OmniCpp_ShowPrototypeInAbbr = 1
let OmniCpp_MayCompleteScope = 1 
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]

""""""""""""""cpp tags""""""""""""""
set tags+=~/.vim/tags/cpp_src/tags

"""""""""""""search"""""""""""""""""""""""""
set incsearch           " search as characters are entered
set hlsearch            " highlight matches

" turn off search highlight
"nnoremap <leader><space> :nohlsearch<CR>

"""""""""""""folding"""""""""""""""""""""""""
"set foldenable          " enable folding
"set foldlevelstart=10   " open most folds by default
"set foldnestmax=10      " 10 nested fold max

" space open/closes folds
"nnoremap <space> za     
"set foldmethod=indent   "fold based on indent level

"""""""""""""movement"""""""""""""""""""""""""
"Switch among Windows                                                                                  
map <C-j> <C-W>j                                                                                       
map <C-k> <C-W>k                                                                                       
map <C-h> <C-W>h                                                                                       
map <C-l> <C-W>l 

" move vertically by visual line
nnoremap j gj           
nnoremap k gk


" highlight last inserted text
nnoremap gV `[v`]

""""""""""""""leader shortcut""""""""""""""""""""""""
" save session
nnoremap <leader>s :mksession<CR>
nnoremap <leader>a :Ack -i 

""""""""""""""CtrlP""""""""""""""""""""""""
" CtrlP settings
"let g:ctrlp_map = '<c-f>'
map <leader>o :BufExplorer<cr>                                                                      
map <leader>f :MRU<CR>

let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'


